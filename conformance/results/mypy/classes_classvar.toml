conformant = "Partial"
notes = """
Internal error if TypeVarTuple is used in ClassVar.
Does not reject use of ParamSpec in ClassVar.
Rejects ClassVar nested in Annotated.
Does not reject use of ClassVar in TypeAlias definition.
Does not infer type of ClassVar from assignment if no type is provided.
"""
output = """
classes_classvar.py:37: error: ClassVar[...] must have at most one type argument  [valid-type]
classes_classvar.py:38: error: Invalid type: try using Literal[3] instead?  [valid-type]
classes_classvar.py:39: error: Name "var" is not defined  [name-defined]
classes_classvar.py:44: error: ClassVar cannot contain type variables  [misc]
classes_classvar.py:45: error: ClassVar cannot contain type variables  [misc]
classes_classvar.py:51: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "list[str]")  [assignment]
classes_classvar.py:53: error: Variable should not be annotated with both ClassVar and Final  [misc]
classes_classvar.py:54: error: Invalid type: ClassVar nested inside other type  [valid-type]
classes_classvar.py:60: error: Invalid type: ClassVar nested inside other type  [valid-type]
classes_classvar.py:62: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:63: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:64: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:66: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:70: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:77: error: Expression is of type "Any", not "float"  [assert-type]
classes_classvar.py:101: error: Cannot assign to class variable "stats" via instance  [misc]
classes_classvar.py:130: error: Incompatible types in assignment (expression has type "ProtoAImpl", variable has type "ProtoA")  [assignment]
classes_classvar.py:130: note: "ProtoAImpl" is missing following "ProtoA" protocol member:
classes_classvar.py:130: note:     z
classes_classvar.py:130: note: Protocol member ProtoA.x expected class variable, got instance variable
classes_classvar.py:130: note: Protocol member ProtoA.y expected class variable, got instance variable
"""
conformance_automated = "Fail"
errors_diff = """
Line 46: Expected 1 errors
Line 71: Expected 1 errors
Line 60: Unexpected errors ['classes_classvar.py:60: error: Invalid type: ClassVar nested inside other type  [valid-type]']
Line 77: Unexpected errors ['classes_classvar.py:77: error: Expression is of type "Any", not "float"  [assert-type]']
"""
