conformant = "Partial"
notes = """
Does not treat `tuple[Any, ...]` as having an arbitrary length.
"""
output = """
generics_typevartuple_unpack.py:46:28 - error: Argument of type "Array[Batch]" cannot be assigned to parameter "x" of type "Array[Batch, *tuple[Any, ...], Channels]" in function "process_batch_channels"
  "Array[Batch]" is incompatible with "Array[Batch, *tuple[Any, ...], Channels]"
    Type parameter "Ts@Array" is invariant, but "*tuple[Batch]" is not the same as "*tuple[Batch, *tuple[Any, ...], Channels]" (reportGeneralTypeIssues)
generics_typevartuple_unpack.py:62:26 - error: Argument of type "Array[*tuple[Any, ...]]" cannot be assigned to parameter "x" of type "Array[Batch, Height, Width, Channels]" in function "expect_precise_array"
  "Array[*tuple[Any, ...]]" is incompatible with "Array[Batch, Height, Width, Channels]"
    Type parameter "Ts@Array" is invariant, but "*tuple[Any, ...]" is not the same as "*tuple[Batch, Height, Width, Channels]" (reportGeneralTypeIssues)
generics_typevartuple_unpack.py:67:27 - error: Type argument list can have at most one unpacked TypeVarTuple or Tuple
generics_typevartuple_unpack.py:68:32 - error: Type argument list can have at most one unpacked TypeVarTuple or Tuple
"""
