conformant = "Pass"
output = """
generics_syntax_infer_variance.py:15:51 - error: TypeVar cannot be both covariant and contravariant (reportGeneralTypeIssues)
generics_syntax_infer_variance.py:17:55 - error: TypeVar cannot be both covariant and contravariant (reportGeneralTypeIssues)
generics_syntax_infer_variance.py:29:35 - error: Expression of type "ShouldBeCovariant1[float]" is incompatible with declared type "ShouldBeCovariant1[int]"
  "ShouldBeCovariant1[float]" is incompatible with "ShouldBeCovariant1[int]"
    Type parameter "T@ShouldBeCovariant1" is covariant, but "float" is not a subtype of "int"
      "float" is incompatible with "int" (reportAssignmentType)
generics_syntax_infer_variance.py:37:35 - error: Expression of type "ShouldBeCovariant2[float]" is incompatible with declared type "ShouldBeCovariant2[int]"
  "ShouldBeCovariant2[float]" is incompatible with "ShouldBeCovariant2[int]"
    Type parameter "T@ShouldBeCovariant2" is covariant, but "float" is not a subtype of "int"
      "float" is incompatible with "int" (reportAssignmentType)
generics_syntax_infer_variance.py:46:35 - error: Expression of type "ShouldBeCovariant3[float]" is incompatible with declared type "ShouldBeCovariant3[int]"
  "ShouldBeCovariant3[float]" is incompatible with "ShouldBeCovariant3[int]"
    Type parameter "T@ShouldBeCovariant3" is covariant, but "float" is not a subtype of "int"
      "float" is incompatible with "int" (reportAssignmentType)
generics_syntax_infer_variance.py:55:34 - error: Expression of type "ShouldBeCovariant4[float]" is incompatible with declared type "ShouldBeCovariant4[int]"
  "ShouldBeCovariant4[float]" is incompatible with "ShouldBeCovariant4[int]"
    Type parameter "T@ShouldBeCovariant4" is covariant, but "float" is not a subtype of "int"
      "float" is incompatible with "int" (reportAssignmentType)
generics_syntax_infer_variance.py:68:34 - error: Expression of type "ShouldBeCovariant5[float]" is incompatible with declared type "ShouldBeCovariant5[int]"
  "ShouldBeCovariant5[float]" is incompatible with "ShouldBeCovariant5[int]"
    Type parameter "T@ShouldBeCovariant5" is covariant, but "float" is not a subtype of "int"
      "float" is incompatible with "int" (reportAssignmentType)
generics_syntax_infer_variance.py:79:34 - error: Expression of type "ShouldBeCovariant6[float]" is incompatible with declared type "ShouldBeCovariant6[int]"
  "ShouldBeCovariant6[float]" is incompatible with "ShouldBeCovariant6[int]"
    Type parameter "T@ShouldBeCovariant6" is covariant, but "float" is not a subtype of "int"
      "float" is incompatible with "int" (reportAssignmentType)
generics_syntax_infer_variance.py:95:38 - error: Expression of type "ShouldBeInvariant1[int]" is incompatible with declared type "ShouldBeInvariant1[float]"
  "ShouldBeInvariant1[int]" is incompatible with "ShouldBeInvariant1[float]"
    Type parameter "T@ShouldBeInvariant1" is invariant, but "int" is not the same as "float" (reportAssignmentType)
generics_syntax_infer_variance.py:96:36 - error: Expression of type "ShouldBeInvariant1[float]" is incompatible with declared type "ShouldBeInvariant1[int]"
  "ShouldBeInvariant1[float]" is incompatible with "ShouldBeInvariant1[int]"
    Type parameter "T@ShouldBeInvariant1" is invariant, but "float" is not the same as "int" (reportAssignmentType)
generics_syntax_infer_variance.py:110:38 - error: Expression of type "ShouldBeInvariant2[int]" is incompatible with declared type "ShouldBeInvariant2[float]"
  "ShouldBeInvariant2[int]" is incompatible with "ShouldBeInvariant2[float]"
    Type parameter "T@ShouldBeInvariant2" is invariant, but "int" is not the same as "float" (reportAssignmentType)
generics_syntax_infer_variance.py:111:36 - error: Expression of type "ShouldBeInvariant2[float]" is incompatible with declared type "ShouldBeInvariant2[int]"
  "ShouldBeInvariant2[float]" is incompatible with "ShouldBeInvariant2[int]"
    Type parameter "T@ShouldBeInvariant2" is invariant, but "float" is not the same as "int" (reportAssignmentType)
generics_syntax_infer_variance.py:118:43 - error: Expression of type "ShouldBeInvariant3[int, str]" is incompatible with declared type "ShouldBeInvariant3[float, str]"
  "ShouldBeInvariant3[int, str]" is incompatible with "ShouldBeInvariant3[float, str]"
    Type parameter "K@ShouldBeInvariant3" is invariant, but "int" is not the same as "float" (reportAssignmentType)
generics_syntax_infer_variance.py:119:41 - error: Expression of type "ShouldBeInvariant3[float, str]" is incompatible with declared type "ShouldBeInvariant3[int, str]"
  "ShouldBeInvariant3[float, str]" is incompatible with "ShouldBeInvariant3[int, str]"
    Type parameter "K@ShouldBeInvariant3" is invariant, but "float" is not the same as "int" (reportAssignmentType)
generics_syntax_infer_variance.py:120:43 - error: Expression of type "ShouldBeInvariant3[str, int]" is incompatible with declared type "ShouldBeInvariant3[str, float]"
  "ShouldBeInvariant3[str, int]" is incompatible with "ShouldBeInvariant3[str, float]"
    Type parameter "V@ShouldBeInvariant3" is invariant, but "int" is not the same as "float" (reportAssignmentType)
generics_syntax_infer_variance.py:121:41 - error: Expression of type "ShouldBeInvariant3[str, float]" is incompatible with declared type "ShouldBeInvariant3[str, int]"
  "ShouldBeInvariant3[str, float]" is incompatible with "ShouldBeInvariant3[str, int]"
    Type parameter "V@ShouldBeInvariant3" is invariant, but "float" is not the same as "int" (reportAssignmentType)
generics_syntax_infer_variance.py:129:38 - error: Expression of type "ShouldBeInvariant4[int]" is incompatible with declared type "ShouldBeInvariant4[float]"
  "ShouldBeInvariant4[int]" is incompatible with "ShouldBeInvariant4[float]"
    Type parameter "T@ShouldBeInvariant4" is invariant, but "int" is not the same as "float" (reportAssignmentType)
generics_syntax_infer_variance.py:137:38 - error: Expression of type "ShouldBeInvariant5[int]" is incompatible with declared type "ShouldBeInvariant5[float]"
  "ShouldBeInvariant5[int]" is incompatible with "ShouldBeInvariant5[float]"
    Type parameter "T@ShouldBeInvariant5" is invariant, but "int" is not the same as "float" (reportAssignmentType)
generics_syntax_infer_variance.py:148:45 - error: Expression of type "ShouldBeContravariant1[int]" is incompatible with declared type "ShouldBeContravariant1[float]"
  "ShouldBeContravariant1[int]" is incompatible with "ShouldBeContravariant1[float]"
    Type parameter "T@ShouldBeContravariant1" is contravariant, but "int" is not a supertype of "float"
      "float" is incompatible with "int" (reportAssignmentType)
"""
conformance_automated = "Pass"
errors_diff = """
"""
