conformant = "Unsupported"
output = """
generics_defaults_referential.py:23: error: Expression is of type "type[slice[Any, Any, Any]]", not "type[slice[int, int, int | None]]"  [assert-type]
generics_defaults_referential.py:24: error: Expression is of type "slice[int, StartT?, int | None]", not "slice[int, int, int | None]"  [assert-type]
generics_defaults_referential.py:25: error: Expression is of type "slice[str, StartT?, int | None]", not "slice[str, str, int | None]"  [assert-type]
generics_defaults_referential.py:40: error: Argument 1 to "Foo" has incompatible type "str"; expected "int"  [arg-type]
generics_defaults_referential.py:95: error: Type variable "generics_defaults_referential.Z1" is unbound  [valid-type]
generics_defaults_referential.py:95: note: (Hint: Use "Generic[Z1]" or "Protocol[Z1]" base class to bind "Z1" inside a class)
generics_defaults_referential.py:95: note: (Hint: Use "Z1" in function signature to bind "Z1" inside a function)
generics_defaults_referential.py:102: error: Expression is of type "type[Bar[Any, Any]]", not "type[Bar[Any, list[Any]]]"  [assert-type]
generics_defaults_referential.py:103: error: Expression is of type "type[Bar[Any, Any]]", not "type[Bar[int, list[int]]]"  [assert-type]
generics_defaults_referential.py:104: error: Expression is of type "Bar[int, list[Never]]", not "Bar[int, list[int]]"  [assert-type]
"""
