conformant = "Pass"
output = """
aliases_type_statement.py:17:12 - error: Cannot access member "bit_count" for type "TypeAliasType"
  Member "bit_count" is unknown (reportAttributeAccessIssue)
aliases_type_statement.py:19:1 - error: Object of type "TypeAliasType" is not callable (reportCallIssue)
aliases_type_statement.py:23:18 - error: Cannot access member "other_attrib" for type "TypeAliasType"
  Member "other_attrib" is unknown (reportAttributeAccessIssue)
aliases_type_statement.py:26:18 - error: A type alias defined in a "type" statement cannot be used as a base class
aliases_type_statement.py:31:22 - error: Argument of type "GoodAlias1" cannot be assigned to parameter "__class_or_tuple" of type "_ClassInfo" in function "isinstance"
  Type "TypeAliasType" cannot be assigned to type "_ClassInfo"
    "TypeAliasType" is incompatible with "type"
    "TypeAliasType" is incompatible with "UnionType"
    "TypeAliasType" is incompatible with "tuple[_ClassInfo, ...]" (reportArgumentType)
aliases_type_statement.py:31:22 - error: Second argument to "isinstance" must be a class or tuple of classes
  Type alias created with "type" statement cannot be used with instance and class checks (reportArgumentType)
aliases_type_statement.py:37:22 - error: Call expression not allowed in type expression (reportInvalidTypeForm)
aliases_type_statement.py:38:22 - error: List expression not allowed in type annotation
  Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
aliases_type_statement.py:38:22 - error: Expected type expression but received "list[Unknown]" (reportGeneralTypeIssues)
aliases_type_statement.py:39:22 - error: Tuple expression not allowed in type annotation
  Use tuple[T1, ..., Tn] to indicate a tuple type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
aliases_type_statement.py:40:22 - error: List expression not allowed in type annotation
  Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
aliases_type_statement.py:40:22 - error: Expected type expression but received "list[type[int]]" (reportGeneralTypeIssues)
aliases_type_statement.py:41:22 - error: Dictionary expression not allowed in type annotation
  Use Dict[T1, T2] to indicate a dictionary type (reportInvalidTypeForm)
aliases_type_statement.py:41:22 - error: Expected type expression but received "dict[str, str]" (reportGeneralTypeIssues)
aliases_type_statement.py:42:22 - error: Call expression not allowed in type expression (reportInvalidTypeForm)
aliases_type_statement.py:43:22 - error: List expression not allowed in type annotation
  Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
aliases_type_statement.py:43:22 - error: Expected type expression but received "list[type[int]]" (reportGeneralTypeIssues)
aliases_type_statement.py:44:22 - error: Ternary expression not allowed in type annotation (reportInvalidTypeForm)
aliases_type_statement.py:45:22 - error: Variable not allowed in type expression (reportInvalidTypeForm)
aliases_type_statement.py:46:23 - error: Expected type expression but received "Literal[True]" (reportGeneralTypeIssues)
aliases_type_statement.py:47:23 - error: Expected type expression but received "Literal[1]" (reportGeneralTypeIssues)
aliases_type_statement.py:48:23 - error: Binary operator not allowed in type annotation (reportInvalidTypeForm)
aliases_type_statement.py:49:23 - error: Expected expression
aliases_type_statement.py:49:23 - error: Tuple expression not allowed in type annotation
  Use tuple[T1, ..., Tn] to indicate a tuple type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
aliases_type_statement.py:52:10 - error: Type alias declaration "BadTypeAlias14" is obscured by a declaration of the same name (reportRedeclaration)
aliases_type_statement.py:58:10 - error: A type statement can be used only within a module or class scope (reportGeneralTypeIssues)
aliases_type_statement.py:64:23 - error: Type parameter "V" is not included in the type parameter list for "TA1" (reportGeneralTypeIssues)
aliases_type_statement.py:69:17 - error: Type parameter "T1" is not included in the type parameter list for "TA2" (reportGeneralTypeIssues)
aliases_type_statement.py:79:7 - error: Could not specialize type "RecursiveTypeAlias2[S@RecursiveTypeAlias2, T@RecursiveTypeAlias2, P@RecursiveTypeAlias2]"
  Type "str" cannot be assigned to type "int"
    "str" is incompatible with "int"
aliases_type_statement.py:81:7 - error: Could not specialize type "RecursiveTypeAlias2[S@RecursiveTypeAlias2, T@RecursiveTypeAlias2, P@RecursiveTypeAlias2]"
  Type "int" cannot be assigned to type "str"
    "int" is incompatible with "str"
aliases_type_statement.py:84:28 - error: Type alias "RecursiveTypeAlias3" cannot use itself in its definition (reportGeneralTypeIssues)
aliases_type_statement.py:86:31 - error: Type alias "RecursiveTypeAlias4" cannot use itself in its definition (reportGeneralTypeIssues)
aliases_type_statement.py:90:28 - error: Type alias "RecursiveTypeAlias6" cannot use itself in its definition (reportGeneralTypeIssues)
"""
