conformant = "Partial"
notes = """
Does not generate a union type for __new__ and __init__ when converting class to callable.
Does not ignore __init__ based on __new__ return type when converting class to callable.
Does not support __new__ return type that is different from class being constructed.
Does not use annotated type of self in __init__ method to generate return type of callable.
"""
conformance_automated = "Fail"
errors_diff = """
Line 127: Expected 1 errors
Line 144: Expected 1 errors
Line 184: Expected 1 errors
Line 195: Expected 1 errors
Line 117: Unexpected errors ['constructors_callable.py:117:8 Incompatible return type [7]: Expected `Class6Proxy` but got `Class6`.']
Line 126: Unexpected errors ['constructors_callable.py:126:12 Missing argument [20]: PositionalOnly call expects argument `x`.']
Line 143: Unexpected errors ['constructors_callable.py:143:12 Missing argument [20]: PositionalOnly call expects argument `x`.']
Line 153: Unexpected errors ['constructors_callable.py:153:4 Incompatible overload [43]: The implementation of `Class7.__init__` does not accept all possible arguments of overload defined on line `153`.']
Line 155: Unexpected errors ['constructors_callable.py:155:4 Incompatible overload [43]: The implementation of `Class7.__init__` does not accept all possible arguments of overload defined on line `155`.']
Line 165: Unexpected errors ['constructors_callable.py:165:15 Incompatible parameter type [6]: In anonymous call, for 1st positional argument, expected `int` but got `str`.']
Line 181: Unexpected errors ['constructors_callable.py:181:22 Incompatible parameter type [6]: In call `accepts_callable`, for 1st positional argument, expected `typing.Callable[constructors_callable.P, Variable[R]]` but got `Type[Class8]`.']
Line 192: Unexpected errors ['constructors_callable.py:192:22 Incompatible parameter type [6]: In call `accepts_callable`, for 1st positional argument, expected `typing.Callable[constructors_callable.P, Variable[R]]` but got `Type[Class9]`.']
"""
output = """
constructors_callable.py:38:0 Missing argument [20]: PositionalOnly call expects argument `x`.
constructors_callable.py:39:0 Unexpected keyword [28]: Unexpected keyword argument `y` to anonymous call.
constructors_callable.py:51:0 Too many arguments [19]: PositionalOnly call expects 0 positional arguments, 1 was provided.
constructors_callable.py:65:0 Missing argument [20]: PositionalOnly call expects argument `x`.
constructors_callable.py:66:0 Unexpected keyword [28]: Unexpected keyword argument `y` to anonymous call.
constructors_callable.py:67:0 Too many arguments [19]: PositionalOnly call expects 1 positional argument, 2 were provided.
constructors_callable.py:79:0 Missing argument [20]: PositionalOnly call expects argument `x`.
constructors_callable.py:80:0 Unexpected keyword [28]: Unexpected keyword argument `y` to anonymous call.
constructors_callable.py:117:8 Incompatible return type [7]: Expected `Class6Proxy` but got `Class6`.
constructors_callable.py:126:12 Missing argument [20]: PositionalOnly call expects argument `x`.
constructors_callable.py:143:12 Missing argument [20]: PositionalOnly call expects argument `x`.
constructors_callable.py:153:4 Incompatible overload [43]: The implementation of `Class7.__init__` does not accept all possible arguments of overload defined on line `153`.
constructors_callable.py:155:4 Incompatible overload [43]: The implementation of `Class7.__init__` does not accept all possible arguments of overload defined on line `155`.
constructors_callable.py:165:15 Incompatible parameter type [6]: In anonymous call, for 1st positional argument, expected `int` but got `str`.
constructors_callable.py:181:22 Incompatible parameter type [6]: In call `accepts_callable`, for 1st positional argument, expected `typing.Callable[constructors_callable.P, Variable[R]]` but got `Type[Class8]`.
constructors_callable.py:192:22 Incompatible parameter type [6]: In call `accepts_callable`, for 1st positional argument, expected `typing.Callable[constructors_callable.P, Variable[R]]` but got `Type[Class9]`.
"""
