conformant = "Partial"
notes = """
Does not allow ClassVar to be nested within Annotated.
Does not allow Final to be nested within Annotated.
Does not allow Required and NotRequired to be nested within Annotated.
"""
output = """
qualifiers_annotated.py:41: error: Bracketed expression "[...]" is not valid as a type  [valid-type]
qualifiers_annotated.py:42: error: Syntax error in type annotation  [syntax]
qualifiers_annotated.py:42: note: Suggestion: Is there a spurious trailing comma?
qualifiers_annotated.py:43: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:44: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:45: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:46: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:47: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:48: error: Name "var1" is not defined  [name-defined]
qualifiers_annotated.py:49: error: Invalid type: try using Literal[True] instead?  [valid-type]
qualifiers_annotated.py:50: error: Invalid type: try using Literal[1] instead?  [valid-type]
qualifiers_annotated.py:51: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:52: error: Invalid type comment or annotation  [valid-type]
qualifiers_annotated.py:62: error: Annotated[...] must have exactly one type argument and at least one annotation  [valid-type]
qualifiers_annotated.py:73: error: Invalid type: ClassVar nested inside other type  [valid-type]
qualifiers_annotated.py:75: error: Final can be only used as an outermost qualifier in a variable annotation  [valid-type]
qualifiers_annotated.py:85: error: Required[] can be only used in a TypedDict definition  [valid-type]
qualifiers_annotated.py:87: error: NotRequired[] can be only used in a TypedDict definition  [valid-type]
"""
